--- sip/QtGui/qevent.sip.old	2012-10-16 12:52:02.049282084 +0200
+++ sip/QtGui/qevent.sip	2012-10-16 12:58:05.433280323 +0200
@@ -38,20 +38,25 @@
 %ConvertToSubClassCode
     switch (sipCpp->type())
     {
+#if defined(SIP_FEATURE_PyQt_Action)
     case QEvent::ActionAdded:
     case QEvent::ActionChanged:
     case QEvent::ActionRemoved:
         sipType = sipType_QActionEvent;
         break;
+#endif
     
     case QEvent::Close:
         sipType = sipType_QCloseEvent;
         break;
     
+#if defined(SIP_FEATURE_PyQt_ContextMenu)
     case QEvent::ContextMenu:
         sipType = sipType_QContextMenuEvent;
         break;
+#endif
     
+#if defined(SIP_FEATURE_PyQt_DragAndDrop)
     case QEvent::DragEnter:
         sipType = sipType_QDragEnterEvent;
         break;
@@ -67,6 +72,7 @@
     case QEvent::Drop:
         sipType = sipType_QDropEvent;
         break;
+#endif
     
     case QEvent::FileOpen:
         sipType = sipType_QFileOpenEvent;
@@ -120,18 +126,23 @@
         sipType = sipType_QResizeEvent;
         break;
     
+#if defined(SIP_FEATURE_PyQt_Shortcut)
     case QEvent::Shortcut:
         sipType = sipType_QShortcutEvent;
         break;
+#endif
     
     case QEvent::Show:
         sipType = sipType_QShowEvent;
         break;
     
+#if defined(SIP_FEATURE_PyQt_StatusTip)
     case QEvent::StatusTip:
         sipType = sipType_QStatusTipEvent;
         break;
-    
+#endif
+
+#if defined(SIP_FEATURE_PyQt_TabletEvent)    
     case QEvent::TabletMove:
     case QEvent::TabletPress:
     case QEvent::TabletRelease:
@@ -141,8 +152,10 @@
     #endif
         sipType = sipType_QTabletEvent;
         break;
+#endif
     
     case QEvent::ToolTip:
+#if defined(SIP_FEATURE_PyQt_WhatsThis)
     case QEvent::WhatsThis:
         sipType = sipType_QHelpEvent;
         break;
@@ -150,26 +163,34 @@
     case QEvent::WhatsThisClicked:
         sipType = sipType_QWhatsThisClickedEvent;
         break;
+#endif
     
+#if defined(SIP_FEATURE_PyQt_WheelEvent)
     case QEvent::Wheel:
         sipType = sipType_QWheelEvent;
         break;
+#endif
     
     case QEvent::WindowStateChange:
         sipType = sipType_QWindowStateChangeEvent;
         break;
     
     #if QT_VERSION >= 0x040200
+    #if defined(SIP_FEATURE_PyQt_ContextMenu)
     case QEvent::GraphicsSceneContextMenu:
         sipType = sipType_QGraphicsSceneContextMenuEvent;
         break;
-    
+    #endif
+
+#if defined(SIP_FEATURE_PyQt_GraphicsView)
+#if defined(SIP_FEATURE_PyQt_DragAndDrop)
     case QEvent::GraphicsSceneDragEnter:
     case QEvent::GraphicsSceneDragLeave:
     case QEvent::GraphicsSceneDragMove:
     case QEvent::GraphicsSceneDrop:
         sipType = sipType_QGraphicsSceneDragDropEvent;
         break;
+#endif
     
     case QEvent::GraphicsSceneHelp:
         sipType = sipType_QGraphicsSceneHelpEvent;
@@ -191,9 +212,10 @@
     case QEvent::GraphicsSceneWheel:
         sipType = sipType_QGraphicsSceneWheelEvent;
         break;
+#endif
     #endif
     
-    #if QT_VERSION >= 0x040400
+    #if QT_VERSION >= 0x040400 && defined(SIP_FEATURE_PyQt_GraphicsView)
     case QEvent::GraphicsSceneMove:
         sipType = sipType_QGraphicsSceneMoveEvent;
         break;
@@ -210,10 +232,12 @@
         sipType = sipType_QTouchEvent;
         break;
     
+    #if defined(SIP_FEATURE_PyQt_Gestures)
     case QEvent::Gesture:
         sipType = sipType_QGestureEvent;
         break;
     #endif
+    #endif
     
     #if QT_VERSION >= 0x050000
     case QEvent::InputMethodQuery:
@@ -342,6 +366,8 @@
 
 %End
 
+%If (PyQt_WheelEvent)
+
 class QWheelEvent : QInputEvent
 {
 %TypeHeaderCode
@@ -398,6 +424,10 @@
 %End
 };
 
+%End
+
+%If (PyQt_TabletEvent)
+
 class QTabletEvent : QInputEvent
 {
 %TypeHeaderCode
@@ -467,6 +497,8 @@
 %End
 };
 
+%End
+
 class QKeyEvent : QInputEvent
 {
 %TypeHeaderCode
@@ -482,8 +514,10 @@
     bool isAutoRepeat() const;
     int count() const /__len__/;
 %If (Qt_4_2_0 -)
+%If (PyQt_Shortcut)
     bool matches(QKeySequence::StandardKey key) const;
 %End
+%End
 %If (Qt_4_2_0 -)
     quint32 nativeModifiers() const;
 %End
@@ -608,6 +642,8 @@
     virtual ~QHideEvent();
 };
 
+%If (PyQt_ContextMenu)
+
 class QContextMenuEvent : QInputEvent
 {
 %TypeHeaderCode
@@ -637,6 +673,10 @@
     QContextMenuEvent::Reason reason() const;
 };
 
+%End
+
+%If (PyQt_InputMethod)
+
 class QInputMethodEvent : QEvent
 {
 %TypeHeaderCode
@@ -697,6 +737,9 @@
 };
 
 %End
+%End
+
+%If (PyQt_DragAndDrop)
 %If (Qt_5_0_0 -)
 
 class QDropEvent : QEvent
@@ -788,6 +831,8 @@
     virtual ~QDragLeaveEvent();
 };
 
+%End
+
 class QHelpEvent : QEvent
 {
 %TypeHeaderCode
@@ -805,6 +850,8 @@
     const QPoint &globalPos() const;
 };
 
+%If (PyQt_StatusTip)
+
 class QStatusTipEvent : QEvent
 {
 %TypeHeaderCode
@@ -822,6 +869,10 @@
     QString tip() const;
 };
 
+%End
+
+%If (PyQt_WhatsThis)
+
 class QWhatsThisClickedEvent : QEvent
 {
 %TypeHeaderCode
@@ -839,6 +890,10 @@
     QString href() const;
 };
 
+%End
+
+%If (PyQt_Action)
+
 class QActionEvent : QEvent
 {
 %TypeHeaderCode
@@ -852,6 +907,8 @@
     QAction *before() const;
 };
 
+%End
+
 class QFileOpenEvent : QEvent /NoDefaultCtors/
 {
 %TypeHeaderCode
@@ -869,6 +926,8 @@
 %End
 };
 
+%If (PyQt_Shortcut)
+
 class QShortcutEvent : QEvent
 {
 %TypeHeaderCode
@@ -898,6 +957,8 @@
 %End
 };
 
+%End
+
 class QWindowStateChangeEvent : QEvent /NoDefaultCtors/
 {
 %TypeHeaderCode
@@ -999,6 +1060,8 @@
 };
 
 %End
+
+%If (PyQt_Gestures)
 %If (Qt_5_0_0 -)
 QFlags<QTouchEvent::TouchPoint::InfoFlag> operator|(QTouchEvent::TouchPoint::InfoFlag f1, QFlags<QTouchEvent::TouchPoint::InfoFlag> f2);
 %End
@@ -1033,10 +1096,14 @@
     void ignore(Qt::GestureType);
     bool isAccepted(Qt::GestureType) const;
     QWidget *widget() const;
+%If (PyQt_GraphicsView)
     QPointF mapToGraphicsScene(const QPointF &gesturePoint) const;
+%End
 };
 
 %End
+%End
+
 %If (Qt_5_0_0 -)
 
 class QExposeEvent : QEvent
@@ -1097,9 +1164,11 @@
 };
 
 %End
+%If (PyQt_Shortcut)
 %If (Qt_4_2_0 -)
 bool operator==(QKeyEvent *e, QKeySequence::StandardKey key);
 %End
 %If (Qt_4_2_0 -)
 bool operator==(QKeySequence::StandardKey key, QKeyEvent *e);
 %End
+%End
